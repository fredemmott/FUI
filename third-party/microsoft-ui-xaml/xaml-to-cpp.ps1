# Copyright 2024 Fred Emmott <fred@fredemmott.com>
# SPDX-License-Identifier: MIT
param($InputFile, $OutputFile)

$Namespaces = @{
    p = "http://schemas.microsoft.com/winfx/2006/xaml/presentation";
    x = "http://schemas.microsoft.com/winfx/2006/xaml";
}
$CppNs = "FredEmmott::GUI::gui_detail::WinUI3Themes"

$Themes = Select-Xml `
  -Path $InputFile `
  -Namespace $Namespaces `
  -XPath "/p:ResourceDictionary/p:ResourceDictionary.ThemeDictionaries/p:ResourceDictionary"

function Get-Key($Color)
{
    return $Color.Attributes.ItemOf("Key", $Namespaces.x).Value -Replace 'Color', ''
}

function Convert-Theme($Theme)
{
    $keys = @()
    $ThemeName = $Theme.Key
    $Colors = $Theme.Color | Sort-Object -Property { Get-Key($_) }

    Write-Output "constexpr ThemeColors ${ThemeName}ThemeColors {"
    foreach ($Color in $Colors)
    {
        $Key = Get-Key($Color)
        $value = $Color.InnerText -replace '#'
        if ($value.Length -eq 6)
        {
            # RGB -> ARGB
            $value = "ff${value}"
        }
        $keys += $Key
        Write-Output "  .m$Key = 0x$value,"
    }
    Write-Output "};"
    Write-Output ($keys -join ',')
}

$keys = @()
$themeDefs = @()
foreach ($Theme in $Themes)
{
    $Result = Convert-Theme $Theme.Node
    $themeDefs += $Result[0..($Result.Length - 2)]
    $keys += $Result[-1] -split ','
    Write-Host "Generated WinUI3 theme: $( $Theme.Node.Key )"

}
$Keys = $keys | Sort-Object | Get-Unique

$content = @"
// $( '@' )generated by: $( $( Get-Item $PSCommandPath ).Name ) $( $( Get-Item ${InputFile} ).Name )
#pragma once

#include <skia/core/SkColor.h>

namespace ${CppNs} {

struct ThemeColors {$(
$Keys.foreach({ "`n  SkColor m$PSItem;" }) )
};

$( $themeDefs -join "`n" )

enum class Colors {$(
$Keys.foreach({ "`n  $PSItem," }) )
};

}

#define FUI_WINUI_THEME_COLORS(X) $(
$Keys.foreach({ "\`n  X($PSItem)" })
)
"@

($content -split "`r" -join "") `
  | Set-Content -Encoding utf8 "$OutputFile" -NoNewline
