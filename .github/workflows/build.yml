name: Build
on: [ push, pull_request ]

jobs:
  build:
    strategy:
      matrix:
        preset:
          - Debug
          - Debug - clang-cl
          - Release
          - Direct2D - Release
          - Skia - Release
    name: "${{matrix.preset}}"
    runs-on: windows-latest
    steps:
      - name: Add Windows SDK to path
        shell: pwsh
        run: |
          dotnet tool install --global Nefarius.Tools.WDKWhere
          wdkwhere | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
      - name: Add Visual Studio C++ tools (compilers) to path
        shell: pwsh
        run: |
          $VCRoot = $(
            vswhere `
              -latest `
              -products * `
              -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
              -property installationPath)
          echo "VC root: ${VCRoot}"
          $VCVersion = $(Get-Content "${VCRoot}\VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt")
          echo "VC version: ${VCVersion}"
          $VCBin = "${VCRoot}\VC\Tools\MSVC\${VCVersion}\bin\HostX64\x64"
          echo "VC bin: ${VCBin}"
          $ClangBin = "${VCRoot}\VC\Tools\Llvm\x64\bin"
          echo "Clang bin: ${ClangBin}"
          
          echo "${VCBin}" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
          echo "${ClangBin}" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Configure
        shell: pwsh
        run: |
          echo "PATH: ${Env:PATH}"
          mkdir build
          cd build
          cmake .. --preset "${{matrix.preset}}"
      - name: Build
        working-directory: build
        run: cmake --build . --parallel